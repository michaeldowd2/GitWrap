var SiteTree={},JustRepo="",TopPath="",CurrentPath="";function getRepoFromBox(){userRepo=document.getElementById("repoBox").value,newURL=window.location.href+"?Repo="+userRepo,window.location.href=newURL}function getJsonFromUrl(url){url||(url=location.href);var question=url.indexOf("?"),hash=url.indexOf("#");if(-1==hash&&-1==question)return{};-1==hash&&(hash=url.length);var query=-1==question||hash==question+1?url.substring(hash):url.substring(question+1,hash),result={};return query.split("&").forEach((function(part){if(part){var eq=(part=part.split("+").join(" ")).indexOf("="),key=eq>-1?part.substr(0,eq):part,val=eq>-1?decodeURIComponent(part.substr(eq+1)):"",from=key.indexOf("[");if(-1==from)result[decodeURIComponent(key)]=val;else{var to=key.indexOf("]",from),index=decodeURIComponent(key.substring(from+1,to));key=decodeURIComponent(key.substring(0,from)),result[key]||(result[key]=[]),index?result[key][index]=val:result[key].push(val)}}})),jQuery.isEmptyObject(result.Repo)||(REPO=result.Repo),CurrentPath=jQuery.isEmptyObject(result.Path)?"":result.Path,console.log("Repo from URL: "+REPO),console.log("Current Path from URL: "+CurrentPath),result.Repo}function ParseTargetFromTitle(Title){return ind=Title.indexOf("[Target="),ind>=0&&(part=Title.substring(ind+8),end=part.indexOf("]"),end>0&&(target=part.substring(0,end).toUpperCase(),console.log("target: "+target),"GALLERY"===target||"LINKS"===target||"PAGE"===target||"BANNER"===target))?target:null}function ParseTitleAndSubtitle(Title,Item){part=Title,ind=Title.indexOf("["),ind>0&&(part=part.substring(0,ind)),parts=part.split("_"),title=parts[0];var titleExtInd=title.indexOf(".");if(titleExtInd>0&&(title=title.substring(0,titleExtInd)),Item.Title=title,Item.Subtitle="",parts.length>1){subTitle=parts[1];var subExtInd=parts[1].indexOf(".");subExtInd>0&&(subTitle=subTitle.substring(0,subExtInd)),Item.Subtitle=subTitle}return Item}function BuildSiteTree(TreeObject){TreeObject.forEach((function(item,index){(""===TopPath||item.path.indexOf(0===TopPath))&&(url=item.url,"blob"==item.type&&(URL="https://raw.githubusercontent.com/"+JustRepo+"/master/"+item.path),title=item.path.substring(item.path.lastIndexOf("/")+1),target=ParseTargetFromTitle(title),newItem=null,"blob"==item.type&&(item.path.toUpperCase().includes(".JPG")||item.path.toUpperCase().includes(".PNG"))?(null===target&&(target="GALLERY"),newItem={Type:"Image",Path:item.path,URL:URL,Target:target}):"blob"==item.type&&item.path.toUpperCase().includes(".MP3")?(null===target&&(target="GALLERY"),newItem={Type:"Audio",Path:item.path,URL:URL,Target:target}):"blob"==item.type&&item.path.toUpperCase().includes(".HTML")&&!item.path.toUpperCase().includes("INDEX.HTML")?(null===target&&(target="PAGE"),newItem={Type:"Html",Path:item.path,URL:URL,Target:target}):"tree"==item.type&&(null===target&&(target="GALLERY"),newItem={Type:"Folder",Path:item.path+"/",URL:URL,Target:target}),null!==newItem&&(newItem=ParseTitleAndSubtitle(title,newItem),SiteTree[item.path]=newItem))}))}function AddBannerImage(Container,Item){html='<div class="carousel-item active">\n                <img src="'+Item.URL+'" class="d-block w-100" alt="'+Item.Title+'">\n                <div class="carousel-caption d-none d-md-block">\n                    <h5>'+Item.Title+"</h5>\n                    <p>"+Item.Subtitle+"</p>\n                </div>\n            </div>",Container.innerHTML+=html}function AddHTML(Container,Item){xhttp=new XMLHttpRequest,xhttp.onreadystatechange=function(){4==this.readyState&&(response="Page Not Found",200==this.status&&(response=this.responseText),Container.innerHTML+='<div class="col-lg-12 col-md-12 col-sm-12 animated fadeInRight"><h1>'+Item.Title+'</h1><p class="font-weight-light">'+Item.Subtitle+"</p><hr>"+response+"</div>")},xhttp.open("GET",Item.URL,!0),xhttp.send()}function AddFolder(Container,Item){Container.innerHTML+='<div class="grid-item col-lg-4 col-md-6 col-sm-12 animated fadeIn" onclick=\'LoadItemsFromPathLink("'+Item.Path+'")\'>\n                                <div class="paletteColour1">\n                                    <h1>'+Item.Title+'</h1>\n                                    <p class="font-weight-light">'+Item.Subtitle+"</p>\n                                </div>\n                            </div>"}function AddImage(Container,Item){Container.innerHTML+='<div class="grid-item col-lg-4 col-md-6 col-sm-12"><img style="width:100%;height:100%"src="'+Item.URL+'" alt="'+Item.Title+'"></div>'}function AddAudio(Container,Item){Container.innerHTML+='<div class="grid-item animated fadeIn col-lg-4 col-md-6 col-sm-12">\n                                <div class="col-sm-12"><h5>'+Item.Title+'</p></div>\n                                <div class="col-sm-12">\n                                    <audio controls>\n                                        <source src="'+Item.URL+'" type="audio/mpeg">\n                                        Your browser does not support the audio element\n                                    </audio>\n                                </div>\n                            </div>'}function LoadItemsFromPathLink(Path){CurrentPath=Path,LoadItemsToPage()}function RefreshMasonry(){imagesLoaded(".grid",(function(instance){var msnry=new Masonry(".grid",{itemSelector:".grid-item"})}))}function LoadItemsToPage(Push=!0,Replace=!1){""!==CurrentPath&&(newURL=window.location.href+"&Path="+CurrentPath,Push?history.pushState("","",newURL):Replace&&history.replaceState("","",newURL)),bannerRender=document.getElementsByClassName("carousel-inner")[0],bannerRender.innerHTML="",pageRender=document.getElementsByClassName("pageRender")[0],pageRender.innerHTML="",linkRender=document.getElementsByClassName("linkRender")[0],linkRender.innerHTML="",galleryRender=document.getElementsByClassName("galleryRender")[0],galleryRender.innerHTML="",Object.keys(SiteTree).forEach((function(key){(""===CurrentPath&&key.indexOf("/")<0||0===key.indexOf(CurrentPath)&&key.substring(CurrentPath.length).indexOf("/")<0)&&(item=SiteTree[key],targetContainer=galleryRender,"PAGE"===item.Target?targetContainer=pageRender:"LINKS"===item.Target?targetContainer=linksRender:"BANNER"===item.Target&&(targetContainer=bannerRender),"BANNER"===item.Target&&"Image"===item.Type?AddBannerImage(targetContainer,item):"Image"===item.Type?AddImage(targetContainer,item):"Folder"==item.Type?AddFolder(targetContainer,item):"Audio"==item.Type?AddAudio(targetContainer,item):"Html"==item.Type&&AddHTML(targetContainer,item))})),RefreshMasonry()}function GetRepoFiles(Repo){if(JustRepo=Repo,repoArray=Repo.split("/"),repoArray.length-1>2)for(JustRepo=repoArray[0]+"/"+repoArray[1],i=2;i<repoArray.length;i++)TopPath+=repoArray[i]+"<br>";masterURL="https://api.github.com/repos/"+JustRepo+"/branches/master";var lastCommitReq=new XMLHttpRequest;lastCommitReq.open("GET",masterURL,!0),lastCommitReq.responseType="json",lastCommitReq.onload=function(oEvent){var obj=lastCommitReq.response;treeURL=obj.commit.commit.tree.url+"?recursive=1";var fileTreeReq=new XMLHttpRequest;fileTreeReq.open("GET",treeURL,!0),fileTreeReq.responseType="json",fileTreeReq.onload=function(oEvent){var obj=fileTreeReq.response;console.log("received json for tree"),treeObject=obj.tree,BuildSiteTree(treeObject),console.log("SiteTree"),console.log(SiteTree),LoadItemsToPage(Push=!1,Replace=!0)},fileTreeReq.send()},lastCommitReq.send()}function GetFolderContents(Repo,Directory,target){var req=new XMLHttpRequest;req.open("GET",target,!0),req.responseType="json",req.onload=function(oEvent){console.log("received tree json");var obj=req.response;treeObject=obj.tree,itemList=BuildItemList(treeObject,Directory,Repo),LoadItemsToPage(Repo,itemList)},console.log("Sending Request to: "+target),req.send()}function ShowRateLimit(){var req=new XMLHttpRequest;req.open("GET","https://api.github.com/rate_limit",!0),req.responseType="json",req.onload=function(oEvent){var obj=req.response;console.log(obj)},console.log("Sending Rate Limit Request"),req.send()}function LoadPageTemplate(){console.log("loading brand"),title=REPO.substring(REPO.indexOf("/")+1),titleEl=document.getElementsByClassName("navbar-brand")[0],titleEl.innerHTML=title,titleEl.setAttribute("href",window.location.href)}function LoadFromParams(){getJsonFromUrl(),""!==REPO?(console.log("Repo: "+REPO),document.getElementById("loadBox").style.display="none",LoadPageTemplate(),GetRepoFiles(REPO)):document.getElementById("content").style.display="none"}window.onpopstate=function(event){getJsonFromUrl(),LoadItemsToPage(Push=!1,Replace=!1)};