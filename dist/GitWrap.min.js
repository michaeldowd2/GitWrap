function getRepoFromBox(){userRepo=document.getElementById("repoBox").value,newURL=window.location.href+"?Repo="+userRepo,window.location.href=newURL}function getJsonFromUrl(url){url||(url=location.href);var question=url.indexOf("?"),hash=url.indexOf("#");if(-1==hash&&-1==question)return{};-1==hash&&(hash=url.length);var query=-1==question||hash==question+1?url.substring(hash):url.substring(question+1,hash),result={};return query.split("&").forEach((function(part){if(part){var eq=(part=part.split("+").join(" ")).indexOf("="),key=eq>-1?part.substr(0,eq):part,val=eq>-1?decodeURIComponent(part.substr(eq+1)):"",from=key.indexOf("[");if(-1==from)result[decodeURIComponent(key)]=val;else{var to=key.indexOf("]",from),index=decodeURIComponent(key.substring(from+1,to));key=decodeURIComponent(key.substring(0,from)),result[key]||(result[key]=[]),index?result[key][index]=val:result[key].push(val)}}})),result.Repo}function BuildItemList(treeObject,Directory,Repo){return newArray=[],treeObject.forEach((function(item,index){"blob"==item.type&&(item.path.toUpperCase().includes(".JPG")||item.path.toUpperCase().includes(".PNG"))&&(title=item.path,repoPath=Directory+"/"+item.path,URL="https://raw.githubusercontent.com/"+Repo+"/master"+repoPath,item={Type:"Image",Title:title,Subtitle:"",Directory:repoPath,URL:URL},newArray.push(item)),"tree"==item.type&&(title=item.path,repoPath=Directory+"/"+item.path,URL=item.url,item={Type:"Folder",Title:title,Subtitle:"",Directory:repoPath,URL:URL},newArray.push(item))})),newArray}function AddFolder(Repo,Container,Item){console.log("adding folder"),Container.innerHTML+='<div class="itemBox" onclick=\'GetFolderContents("'+REPO+'","'+Item.Directory+'","'+Item.URL+"\")'>"+Item.Type+": "+Item.Title+": "+Item.Directory+"</div>"}function AddImage(Repo,Container,Item){console.log("adding image"),Container.innerHTML+='<img src="'+Item.URL+'" alt="'+Item.Title+'">'}function LoadItemsToPage(Repo,ItemList){console.log("Loading Items to Page"),console.log(ItemList),container=document.getElementById("content"),container.innerHTML="<h1>"+Repo+"</h1>",ItemList.forEach((function(item,index){"Image"===item.Type&&item.Title.includes("Summary")?AddImage(Repo,container,item):"Folder"==item.Type&&AddFolder(Repo,container,item)}))}function GetRepoFiles(Repo){masterURL="https://api.github.com/repos/"+Repo+"/branches/master";var lastCommitReq=new XMLHttpRequest;lastCommitReq.open("GET",masterURL,!0),lastCommitReq.responseType="json",lastCommitReq.onload=function(oEvent){var obj=lastCommitReq.response;console.log("received json for last commit"),treeURL=obj.commit.commit.tree.url,console.log(treeURL);var fileTreeReq=new XMLHttpRequest;fileTreeReq.open("GET",treeURL,!0),fileTreeReq.responseType="json",fileTreeReq.onload=function(oEvent){var obj=fileTreeReq.response;console.log("received json for tree"),treeObject=obj.tree,console.log(treeObject),itemList=BuildItemList(treeObject,"",Repo),LoadItemsToPage(Repo,itemList)},console.log("Sending Request for file list to: "+masterURL),fileTreeReq.send()},console.log("Sending Request for last commit to: "+masterURL),lastCommitReq.send()}function GetFolderContents(Repo,Directory,target){var req=new XMLHttpRequest;req.open("GET",target,!0),req.responseType="json",req.onload=function(oEvent){console.log("received tree json");var obj=req.response;treeObject=obj.tree,itemList=BuildItemList(treeObject,Directory,Repo),LoadItemsToPage(Repo,itemList)},console.log("Sending Request to: "+target),req.send()}function ShowRateLimit(){var req=new XMLHttpRequest;req.open("GET","https://api.github.com/rate_limit",!0),req.responseType="json",req.onload=function(oEvent){console.log("Rate Limit");var obj=req.response;console.log(obj)},console.log("Sending Rate Limit Request"),req.send()}function LoadFromParams(){urlRepo=getJsonFromUrl(),jQuery.isEmptyObject(urlRepo)||(REPO=urlRepo),""!==REPO?(console.log("Repo: "+REPO),document.getElementById("loadBox").style.display="none",GetRepoFiles(REPO)):document.getElementById("content").style.display="none"}